language: go

go:
  - 1.7.x
  - 1.8.x

install:
  # tools
  - make tools

  # project
  - make dependencies
  - make install

script:
  # build all test imports
  - go test -i ./...

  # linting
  - export GOFMT=$(gofmt -l .)
  - echo "$GOFMT"
  - $(exit $(echo -n "$GOFMT" | wc -l))
  - export GOERRCHECK=$(errcheck github.com/zimmski/tavor/...)
  - echo "$GOERRCHECK"
  - $(exit $(echo -n "$GOERRCHECK" | wc -l))
  - export GOVET=$(go tool vet -all=true -v=true . 2>&1 | grep --invert-match -P "(Checking file|\%p of wrong type|can't check non-constant format|not compatible with reflect.StructTag.Get)")
  - echo "$GOVET"
  - $(exit $(echo -n "$GOVET" | wc -l))
  - export GOLINT=$(golint ./... | grep --invert-match -P "(_string.go:)")
  - echo "$GOLINT"
  - $(exit $(echo -n "$GOLINT" | wc -l))

  # test and do code coverage
  - ginkgo -r -cover -race -skipPackage="testdata"
  - gover
  - if [ "$TRAVIS_SECURE_ENV_VARS" = "true" ] && [[ $(go version) =~ go1\.5 ]]; then goveralls -coverprofile=gover.coverprofile -service=travis-ci -repotoken $COVERALLS_TOKEN; fi

env:
  # coveralls.io
  secure: "CPuDl59GuLvd8BFbJwuy2mynpN4e9l2LAPF42yaf8b9HQIYQPrSeycqQAIDPQgKhk4x3/FbX1JrvieTP/P2hx+alxJv6tvEvh/aGg91h/dgLpUHiIvBQfa7viUKZrxkER3pQg30Ql2fMJOz8gKPWyB0mNvm5Eh4ysdjJmILTGuM="

sudo: false
